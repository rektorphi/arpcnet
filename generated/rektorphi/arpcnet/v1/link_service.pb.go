// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: rektorphi/arpcnet/v1/link_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LinkFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*LinkFrame_RpcFrame
	//	*LinkFrame_Query
	//	*LinkFrame_Announce
	Type isLinkFrame_Type `protobuf_oneof:"type"`
}

func (x *LinkFrame) Reset() {
	*x = LinkFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rektorphi_arpcnet_v1_link_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkFrame) ProtoMessage() {}

func (x *LinkFrame) ProtoReflect() protoreflect.Message {
	mi := &file_rektorphi_arpcnet_v1_link_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkFrame.ProtoReflect.Descriptor instead.
func (*LinkFrame) Descriptor() ([]byte, []int) {
	return file_rektorphi_arpcnet_v1_link_service_proto_rawDescGZIP(), []int{0}
}

func (m *LinkFrame) GetType() isLinkFrame_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *LinkFrame) GetRpcFrame() *RPCFrame {
	if x, ok := x.GetType().(*LinkFrame_RpcFrame); ok {
		return x.RpcFrame
	}
	return nil
}

func (x *LinkFrame) GetQuery() *Query {
	if x, ok := x.GetType().(*LinkFrame_Query); ok {
		return x.Query
	}
	return nil
}

func (x *LinkFrame) GetAnnounce() *Announce {
	if x, ok := x.GetType().(*LinkFrame_Announce); ok {
		return x.Announce
	}
	return nil
}

type isLinkFrame_Type interface {
	isLinkFrame_Type()
}

type LinkFrame_RpcFrame struct {
	RpcFrame *RPCFrame `protobuf:"bytes,1,opt,name=rpc_frame,json=rpcFrame,proto3,oneof"`
}

type LinkFrame_Query struct {
	Query *Query `protobuf:"bytes,2,opt,name=query,proto3,oneof"`
}

type LinkFrame_Announce struct {
	Announce *Announce `protobuf:"bytes,3,opt,name=announce,proto3,oneof"`
}

func (*LinkFrame_RpcFrame) isLinkFrame_Type() {}

func (*LinkFrame_Query) isLinkFrame_Type() {}

func (*LinkFrame_Announce) isLinkFrame_Type() {}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name []byte `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// How long this query is valid in Unix seconds.
	// Receivers of this message can choose a shorter deadline.
	DeadlineUnixMs uint64 `protobuf:"varint,3,opt,name=deadline_unix_ms,json=deadlineUnixMs,proto3" json:"deadline_unix_ms,omitempty"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rektorphi_arpcnet_v1_link_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_rektorphi_arpcnet_v1_link_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_rektorphi_arpcnet_v1_link_service_proto_rawDescGZIP(), []int{1}
}

func (x *Query) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Query) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Query) GetDeadlineUnixMs() uint64 {
	if x != nil {
		return x.DeadlineUnixMs
	}
	return 0
}

type Announce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           []byte  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value          *Metric `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	DeadlineUnixMs uint64  `protobuf:"varint,4,opt,name=deadline_unix_ms,json=deadlineUnixMs,proto3" json:"deadline_unix_ms,omitempty"`
}

func (x *Announce) Reset() {
	*x = Announce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rektorphi_arpcnet_v1_link_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Announce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Announce) ProtoMessage() {}

func (x *Announce) ProtoReflect() protoreflect.Message {
	mi := &file_rektorphi_arpcnet_v1_link_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Announce.ProtoReflect.Descriptor instead.
func (*Announce) Descriptor() ([]byte, []int) {
	return file_rektorphi_arpcnet_v1_link_service_proto_rawDescGZIP(), []int{2}
}

func (x *Announce) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Announce) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Announce) GetValue() *Metric {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Announce) GetDeadlineUnixMs() uint64 {
	if x != nil {
		return x.DeadlineUnixMs
	}
	return 0
}

type Metric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hops int32 `protobuf:"varint,1,opt,name=hops,proto3" json:"hops,omitempty"`
}

func (x *Metric) Reset() {
	*x = Metric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rektorphi_arpcnet_v1_link_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_rektorphi_arpcnet_v1_link_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_rektorphi_arpcnet_v1_link_service_proto_rawDescGZIP(), []int{3}
}

func (x *Metric) GetHops() int32 {
	if x != nil {
		return x.Hops
	}
	return 0
}

var File_rektorphi_arpcnet_v1_link_service_proto protoreflect.FileDescriptor

var file_rektorphi_arpcnet_v1_link_service_proto_rawDesc = []byte{
	0x0a, 0x27, 0x72, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x2f, 0x61, 0x72, 0x70, 0x63,
	0x6e, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x72, 0x65, 0x6b, 0x74, 0x6f,
	0x72, 0x70, 0x68, 0x69, 0x2e, 0x61, 0x72, 0x70, 0x63, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x1a,
	0x23, 0x72, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x2f, 0x61, 0x72, 0x70, 0x63, 0x6e,
	0x65, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x70, 0x63, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x01, 0x0a, 0x09, 0x4c, 0x69, 0x6e, 0x6b, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x70, 0x68,
	0x69, 0x2e, 0x61, 0x72, 0x70, 0x63, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x50, 0x43,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x08, 0x72, 0x70, 0x63, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x12, 0x33, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x72, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x2e, 0x61, 0x72, 0x70,
	0x63, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3c, 0x0a, 0x08, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x6b, 0x74, 0x6f,
	0x72, 0x70, 0x68, 0x69, 0x2e, 0x61, 0x72, 0x70, 0x63, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x08, 0x61, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x55, 0x0a, 0x05,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x61,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x6e, 0x69,
	0x78, 0x4d, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x08, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x2e,
	0x61, 0x72, 0x70, 0x63, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x6e, 0x69, 0x78,
	0x4d, 0x73, 0x22, 0x1c, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x6f, 0x70, 0x73,
	0x32, 0x5b, 0x0a, 0x0b, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4c, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1f, 0x2e, 0x72, 0x65, 0x6b, 0x74, 0x6f, 0x72,
	0x70, 0x68, 0x69, 0x2e, 0x61, 0x72, 0x70, 0x63, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x6b, 0x74, 0x6f,
	0x72, 0x70, 0x68, 0x69, 0x2e, 0x61, 0x72, 0x70, 0x63, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x6e, 0x6b, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x44, 0x0a,
	0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x6b, 0x74,
	0x6f, 0x72, 0x70, 0x68, 0x69, 0x2e, 0x61, 0x72, 0x70, 0x63, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31,
	0x50, 0x01, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72,
	0x65, 0x6b, 0x74, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x2f, 0x61, 0x72, 0x70, 0x63, 0x6e, 0x65, 0x74,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rektorphi_arpcnet_v1_link_service_proto_rawDescOnce sync.Once
	file_rektorphi_arpcnet_v1_link_service_proto_rawDescData = file_rektorphi_arpcnet_v1_link_service_proto_rawDesc
)

func file_rektorphi_arpcnet_v1_link_service_proto_rawDescGZIP() []byte {
	file_rektorphi_arpcnet_v1_link_service_proto_rawDescOnce.Do(func() {
		file_rektorphi_arpcnet_v1_link_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_rektorphi_arpcnet_v1_link_service_proto_rawDescData)
	})
	return file_rektorphi_arpcnet_v1_link_service_proto_rawDescData
}

var file_rektorphi_arpcnet_v1_link_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_rektorphi_arpcnet_v1_link_service_proto_goTypes = []interface{}{
	(*LinkFrame)(nil), // 0: rektorphi.arpcnet.v1.LinkFrame
	(*Query)(nil),     // 1: rektorphi.arpcnet.v1.Query
	(*Announce)(nil),  // 2: rektorphi.arpcnet.v1.Announce
	(*Metric)(nil),    // 3: rektorphi.arpcnet.v1.Metric
	(*RPCFrame)(nil),  // 4: rektorphi.arpcnet.v1.RPCFrame
}
var file_rektorphi_arpcnet_v1_link_service_proto_depIdxs = []int32{
	4, // 0: rektorphi.arpcnet.v1.LinkFrame.rpc_frame:type_name -> rektorphi.arpcnet.v1.RPCFrame
	1, // 1: rektorphi.arpcnet.v1.LinkFrame.query:type_name -> rektorphi.arpcnet.v1.Query
	2, // 2: rektorphi.arpcnet.v1.LinkFrame.announce:type_name -> rektorphi.arpcnet.v1.Announce
	3, // 3: rektorphi.arpcnet.v1.Announce.value:type_name -> rektorphi.arpcnet.v1.Metric
	0, // 4: rektorphi.arpcnet.v1.LinkService.Link:input_type -> rektorphi.arpcnet.v1.LinkFrame
	0, // 5: rektorphi.arpcnet.v1.LinkService.Link:output_type -> rektorphi.arpcnet.v1.LinkFrame
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_rektorphi_arpcnet_v1_link_service_proto_init() }
func file_rektorphi_arpcnet_v1_link_service_proto_init() {
	if File_rektorphi_arpcnet_v1_link_service_proto != nil {
		return
	}
	file_rektorphi_arpcnet_v1_rpcframe_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_rektorphi_arpcnet_v1_link_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rektorphi_arpcnet_v1_link_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rektorphi_arpcnet_v1_link_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Announce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rektorphi_arpcnet_v1_link_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rektorphi_arpcnet_v1_link_service_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*LinkFrame_RpcFrame)(nil),
		(*LinkFrame_Query)(nil),
		(*LinkFrame_Announce)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rektorphi_arpcnet_v1_link_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rektorphi_arpcnet_v1_link_service_proto_goTypes,
		DependencyIndexes: file_rektorphi_arpcnet_v1_link_service_proto_depIdxs,
		MessageInfos:      file_rektorphi_arpcnet_v1_link_service_proto_msgTypes,
	}.Build()
	File_rektorphi_arpcnet_v1_link_service_proto = out.File
	file_rektorphi_arpcnet_v1_link_service_proto_rawDesc = nil
	file_rektorphi_arpcnet_v1_link_service_proto_goTypes = nil
	file_rektorphi_arpcnet_v1_link_service_proto_depIdxs = nil
}
