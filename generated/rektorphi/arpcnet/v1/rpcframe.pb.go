// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: rektorphi/arpcnet/v1/rpcframe.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RPCFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"fixed64,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Type:
	//	*RPCFrame_UpStart
	//	*RPCFrame_UpData
	//	*RPCFrame_UpClose
	//	*RPCFrame_UpCancel
	//	*RPCFrame_DownResp
	//	*RPCFrame_DownData
	//	*RPCFrame_DownFinish
	Type isRPCFrame_Type `protobuf_oneof:"type"`
}

func (x *RPCFrame) Reset() {
	*x = RPCFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCFrame) ProtoMessage() {}

func (x *RPCFrame) ProtoReflect() protoreflect.Message {
	mi := &file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCFrame.ProtoReflect.Descriptor instead.
func (*RPCFrame) Descriptor() ([]byte, []int) {
	return file_rektorphi_arpcnet_v1_rpcframe_proto_rawDescGZIP(), []int{0}
}

func (x *RPCFrame) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (m *RPCFrame) GetType() isRPCFrame_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *RPCFrame) GetUpStart() *UpStart {
	if x, ok := x.GetType().(*RPCFrame_UpStart); ok {
		return x.UpStart
	}
	return nil
}

func (x *RPCFrame) GetUpData() *UpData {
	if x, ok := x.GetType().(*RPCFrame_UpData); ok {
		return x.UpData
	}
	return nil
}

func (x *RPCFrame) GetUpClose() *UpClose {
	if x, ok := x.GetType().(*RPCFrame_UpClose); ok {
		return x.UpClose
	}
	return nil
}

func (x *RPCFrame) GetUpCancel() *UpCancel {
	if x, ok := x.GetType().(*RPCFrame_UpCancel); ok {
		return x.UpCancel
	}
	return nil
}

func (x *RPCFrame) GetDownResp() *DownResponse {
	if x, ok := x.GetType().(*RPCFrame_DownResp); ok {
		return x.DownResp
	}
	return nil
}

func (x *RPCFrame) GetDownData() *DownData {
	if x, ok := x.GetType().(*RPCFrame_DownData); ok {
		return x.DownData
	}
	return nil
}

func (x *RPCFrame) GetDownFinish() *DownFinish {
	if x, ok := x.GetType().(*RPCFrame_DownFinish); ok {
		return x.DownFinish
	}
	return nil
}

type isRPCFrame_Type interface {
	isRPCFrame_Type()
}

type RPCFrame_UpStart struct {
	UpStart *UpStart `protobuf:"bytes,2,opt,name=up_start,json=upStart,proto3,oneof"`
}

type RPCFrame_UpData struct {
	UpData *UpData `protobuf:"bytes,3,opt,name=up_data,json=upData,proto3,oneof"`
}

type RPCFrame_UpClose struct {
	UpClose *UpClose `protobuf:"bytes,4,opt,name=up_close,json=upClose,proto3,oneof"`
}

type RPCFrame_UpCancel struct {
	UpCancel *UpCancel `protobuf:"bytes,5,opt,name=up_cancel,json=upCancel,proto3,oneof"`
}

type RPCFrame_DownResp struct {
	DownResp *DownResponse `protobuf:"bytes,8,opt,name=down_resp,json=downResp,proto3,oneof"`
}

type RPCFrame_DownData struct {
	DownData *DownData `protobuf:"bytes,9,opt,name=down_data,json=downData,proto3,oneof"`
}

type RPCFrame_DownFinish struct {
	DownFinish *DownFinish `protobuf:"bytes,10,opt,name=down_finish,json=downFinish,proto3,oneof"`
}

func (*RPCFrame_UpStart) isRPCFrame_Type() {}

func (*RPCFrame_UpData) isRPCFrame_Type() {}

func (*RPCFrame_UpClose) isRPCFrame_Type() {}

func (*RPCFrame_UpCancel) isRPCFrame_Type() {}

func (*RPCFrame_DownResp) isRPCFrame_Type() {}

func (*RPCFrame_DownData) isRPCFrame_Type() {}

func (*RPCFrame_DownFinish) isRPCFrame_Type() {}

type MD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KvPairs []string `protobuf:"bytes,1,rep,name=kv_pairs,json=kvPairs,proto3" json:"kv_pairs,omitempty"`
}

func (x *MD) Reset() {
	*x = MD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MD) ProtoMessage() {}

func (x *MD) ProtoReflect() protoreflect.Message {
	mi := &file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MD.ProtoReflect.Descriptor instead.
func (*MD) Descriptor() ([]byte, []int) {
	return file_rektorphi_arpcnet_v1_rpcframe_proto_rawDescGZIP(), []int{1}
}

func (x *MD) GetKvPairs() []string {
	if x != nil {
		return x.KvPairs
	}
	return nil
}

type UpStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId      []byte            `protobuf:"bytes,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	DestinationId []byte            `protobuf:"bytes,2,opt,name=destination_id,json=destinationId,proto3" json:"destination_id,omitempty"`
	Metadata      *MD               `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Properties    map[string][]byte `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpStart) Reset() {
	*x = UpStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpStart) ProtoMessage() {}

func (x *UpStart) ProtoReflect() protoreflect.Message {
	mi := &file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpStart.ProtoReflect.Descriptor instead.
func (*UpStart) Descriptor() ([]byte, []int) {
	return file_rektorphi_arpcnet_v1_rpcframe_proto_rawDescGZIP(), []int{2}
}

func (x *UpStart) GetSourceId() []byte {
	if x != nil {
		return x.SourceId
	}
	return nil
}

func (x *UpStart) GetDestinationId() []byte {
	if x != nil {
		return x.DestinationId
	}
	return nil
}

func (x *UpStart) GetMetadata() *MD {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpStart) GetProperties() map[string][]byte {
	if x != nil {
		return x.Properties
	}
	return nil
}

type UpData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk     []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	Remaining uint32 `protobuf:"varint,2,opt,name=remaining,proto3" json:"remaining,omitempty"`
}

func (x *UpData) Reset() {
	*x = UpData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpData) ProtoMessage() {}

func (x *UpData) ProtoReflect() protoreflect.Message {
	mi := &file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpData.ProtoReflect.Descriptor instead.
func (*UpData) Descriptor() ([]byte, []int) {
	return file_rektorphi_arpcnet_v1_rpcframe_proto_rawDescGZIP(), []int{3}
}

func (x *UpData) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *UpData) GetRemaining() uint32 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

type UpClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpClose) Reset() {
	*x = UpClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpClose) ProtoMessage() {}

func (x *UpClose) ProtoReflect() protoreflect.Message {
	mi := &file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpClose.ProtoReflect.Descriptor instead.
func (*UpClose) Descriptor() ([]byte, []int) {
	return file_rektorphi_arpcnet_v1_rpcframe_proto_rawDescGZIP(), []int{4}
}

type UpCancel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpCancel) Reset() {
	*x = UpCancel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpCancel) ProtoMessage() {}

func (x *UpCancel) ProtoReflect() protoreflect.Message {
	mi := &file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpCancel.ProtoReflect.Descriptor instead.
func (*UpCancel) Descriptor() ([]byte, []int) {
	return file_rektorphi_arpcnet_v1_rpcframe_proto_rawDescGZIP(), []int{5}
}

func (x *UpCancel) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DownResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *MD `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *DownResponse) Reset() {
	*x = DownResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownResponse) ProtoMessage() {}

func (x *DownResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownResponse.ProtoReflect.Descriptor instead.
func (*DownResponse) Descriptor() ([]byte, []int) {
	return file_rektorphi_arpcnet_v1_rpcframe_proto_rawDescGZIP(), []int{6}
}

func (x *DownResponse) GetMetadata() *MD {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DownData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk     []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	Remaining uint32 `protobuf:"varint,2,opt,name=remaining,proto3" json:"remaining,omitempty"`
}

func (x *DownData) Reset() {
	*x = DownData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownData) ProtoMessage() {}

func (x *DownData) ProtoReflect() protoreflect.Message {
	mi := &file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownData.ProtoReflect.Descriptor instead.
func (*DownData) Descriptor() ([]byte, []int) {
	return file_rektorphi_arpcnet_v1_rpcframe_proto_rawDescGZIP(), []int{7}
}

func (x *DownData) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *DownData) GetRemaining() uint32 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

type DownFinish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   uint32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Metadata *MD    `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *DownFinish) Reset() {
	*x = DownFinish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownFinish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownFinish) ProtoMessage() {}

func (x *DownFinish) ProtoReflect() protoreflect.Message {
	mi := &file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownFinish.ProtoReflect.Descriptor instead.
func (*DownFinish) Descriptor() ([]byte, []int) {
	return file_rektorphi_arpcnet_v1_rpcframe_proto_rawDescGZIP(), []int{8}
}

func (x *DownFinish) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DownFinish) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DownFinish) GetMetadata() *MD {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_rektorphi_arpcnet_v1_rpcframe_proto protoreflect.FileDescriptor

var file_rektorphi_arpcnet_v1_rpcframe_proto_rawDesc = []byte{
	0x0a, 0x23, 0x72, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x2f, 0x61, 0x72, 0x70, 0x63,
	0x6e, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x70, 0x63, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x72, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x70, 0x68, 0x69,
	0x2e, 0x61, 0x72, 0x70, 0x63, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x22, 0xd9, 0x03, 0x0a, 0x08,
	0x52, 0x50, 0x43, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x08, 0x75, 0x70, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x6b,
	0x74, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x2e, 0x61, 0x72, 0x70, 0x63, 0x6e, 0x65, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x07, 0x75, 0x70, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x75, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x70, 0x68,
	0x69, 0x2e, 0x61, 0x72, 0x70, 0x63, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x06, 0x75, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a,
	0x08, 0x75, 0x70, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x72, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x2e, 0x61, 0x72, 0x70, 0x63,
	0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x07, 0x75, 0x70, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x75, 0x70, 0x5f,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72,
	0x65, 0x6b, 0x74, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x2e, 0x61, 0x72, 0x70, 0x63, 0x6e, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x08,
	0x75, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x41, 0x0a, 0x09, 0x64, 0x6f, 0x77, 0x6e,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65,
	0x6b, 0x74, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x2e, 0x61, 0x72, 0x70, 0x63, 0x6e, 0x65, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x09, 0x64,
	0x6f, 0x77, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x72, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x2e, 0x61, 0x72, 0x70, 0x63, 0x6e,
	0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00,
	0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x0b, 0x64, 0x6f,
	0x77, 0x6e, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x72, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x2e, 0x61, 0x72, 0x70, 0x63,
	0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x42,
	0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x1f, 0x0a, 0x02, 0x4d, 0x44, 0x12, 0x19, 0x0a,
	0x08, 0x6b, 0x76, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x6b, 0x76, 0x50, 0x61, 0x69, 0x72, 0x73, 0x22, 0x91, 0x02, 0x0a, 0x07, 0x55, 0x70, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x6b,
	0x74, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x2e, 0x61, 0x72, 0x70, 0x63, 0x6e, 0x65, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x44, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x72, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x2e, 0x61,
	0x72, 0x70, 0x63, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x3d, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3c, 0x0a, 0x06,
	0x55, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x09, 0x0a, 0x07, 0x55, 0x70,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x22, 0x24, 0x0a, 0x08, 0x55, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x44, 0x0a, 0x0c, 0x44,
	0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x72, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x2e, 0x61, 0x72, 0x70, 0x63, 0x6e, 0x65,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x44, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x3e, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x22, 0x74, 0x0a, 0x0a, 0x44, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x2e,
	0x61, 0x72, 0x70, 0x63, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x44, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x44, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x2e,
	0x61, 0x72, 0x70, 0x63, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x1f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x70,
	0x68, 0x69, 0x2f, 0x61, 0x72, 0x70, 0x63, 0x6e, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rektorphi_arpcnet_v1_rpcframe_proto_rawDescOnce sync.Once
	file_rektorphi_arpcnet_v1_rpcframe_proto_rawDescData = file_rektorphi_arpcnet_v1_rpcframe_proto_rawDesc
)

func file_rektorphi_arpcnet_v1_rpcframe_proto_rawDescGZIP() []byte {
	file_rektorphi_arpcnet_v1_rpcframe_proto_rawDescOnce.Do(func() {
		file_rektorphi_arpcnet_v1_rpcframe_proto_rawDescData = protoimpl.X.CompressGZIP(file_rektorphi_arpcnet_v1_rpcframe_proto_rawDescData)
	})
	return file_rektorphi_arpcnet_v1_rpcframe_proto_rawDescData
}

var file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_rektorphi_arpcnet_v1_rpcframe_proto_goTypes = []interface{}{
	(*RPCFrame)(nil),     // 0: rektorphi.arpcnet.v1.RPCFrame
	(*MD)(nil),           // 1: rektorphi.arpcnet.v1.MD
	(*UpStart)(nil),      // 2: rektorphi.arpcnet.v1.UpStart
	(*UpData)(nil),       // 3: rektorphi.arpcnet.v1.UpData
	(*UpClose)(nil),      // 4: rektorphi.arpcnet.v1.UpClose
	(*UpCancel)(nil),     // 5: rektorphi.arpcnet.v1.UpCancel
	(*DownResponse)(nil), // 6: rektorphi.arpcnet.v1.DownResponse
	(*DownData)(nil),     // 7: rektorphi.arpcnet.v1.DownData
	(*DownFinish)(nil),   // 8: rektorphi.arpcnet.v1.DownFinish
	nil,                  // 9: rektorphi.arpcnet.v1.UpStart.PropertiesEntry
}
var file_rektorphi_arpcnet_v1_rpcframe_proto_depIdxs = []int32{
	2,  // 0: rektorphi.arpcnet.v1.RPCFrame.up_start:type_name -> rektorphi.arpcnet.v1.UpStart
	3,  // 1: rektorphi.arpcnet.v1.RPCFrame.up_data:type_name -> rektorphi.arpcnet.v1.UpData
	4,  // 2: rektorphi.arpcnet.v1.RPCFrame.up_close:type_name -> rektorphi.arpcnet.v1.UpClose
	5,  // 3: rektorphi.arpcnet.v1.RPCFrame.up_cancel:type_name -> rektorphi.arpcnet.v1.UpCancel
	6,  // 4: rektorphi.arpcnet.v1.RPCFrame.down_resp:type_name -> rektorphi.arpcnet.v1.DownResponse
	7,  // 5: rektorphi.arpcnet.v1.RPCFrame.down_data:type_name -> rektorphi.arpcnet.v1.DownData
	8,  // 6: rektorphi.arpcnet.v1.RPCFrame.down_finish:type_name -> rektorphi.arpcnet.v1.DownFinish
	1,  // 7: rektorphi.arpcnet.v1.UpStart.metadata:type_name -> rektorphi.arpcnet.v1.MD
	9,  // 8: rektorphi.arpcnet.v1.UpStart.properties:type_name -> rektorphi.arpcnet.v1.UpStart.PropertiesEntry
	1,  // 9: rektorphi.arpcnet.v1.DownResponse.metadata:type_name -> rektorphi.arpcnet.v1.MD
	1,  // 10: rektorphi.arpcnet.v1.DownFinish.metadata:type_name -> rektorphi.arpcnet.v1.MD
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_rektorphi_arpcnet_v1_rpcframe_proto_init() }
func file_rektorphi_arpcnet_v1_rpcframe_proto_init() {
	if File_rektorphi_arpcnet_v1_rpcframe_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpCancel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownFinish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*RPCFrame_UpStart)(nil),
		(*RPCFrame_UpData)(nil),
		(*RPCFrame_UpClose)(nil),
		(*RPCFrame_UpCancel)(nil),
		(*RPCFrame_DownResp)(nil),
		(*RPCFrame_DownData)(nil),
		(*RPCFrame_DownFinish)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rektorphi_arpcnet_v1_rpcframe_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rektorphi_arpcnet_v1_rpcframe_proto_goTypes,
		DependencyIndexes: file_rektorphi_arpcnet_v1_rpcframe_proto_depIdxs,
		MessageInfos:      file_rektorphi_arpcnet_v1_rpcframe_proto_msgTypes,
	}.Build()
	File_rektorphi_arpcnet_v1_rpcframe_proto = out.File
	file_rektorphi_arpcnet_v1_rpcframe_proto_rawDesc = nil
	file_rektorphi_arpcnet_v1_rpcframe_proto_goTypes = nil
	file_rektorphi_arpcnet_v1_rpcframe_proto_depIdxs = nil
}
